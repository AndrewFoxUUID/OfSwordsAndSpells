[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=86]
resource_local_to_scene = true
code = "shader_type canvas_item;

const vec4 original_hair = vec4(0.11, 0.06, 0.11, 1.00);

uniform vec4 hair : hint_color = vec4(0.11, 0.06, 0.11, 1.00);

bool color_equals(vec4 c1, vec4 c2) {
	return abs(c1.r - c2.r) < 0.02 && abs(c1.g - c2.g) < 0.02 && abs(c1.b - c2.b) < 0.02 && abs(c1.a - c2.a) < 0.02;
}

void fragment() {
	vec4 current_color = texture(TEXTURE, UV);
	
	if (color_equals(current_color, original_hair)) {
		COLOR = hair;
	} else {
		COLOR = current_color;
	}
}"

[resource]
resource_local_to_scene = true
shader = SubResource( 86 )
shader_param/hair = Color( 0.11, 0.06, 0.11, 1 )
